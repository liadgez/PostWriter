[tool:pytest]
# Pytest configuration for PostWriter comprehensive testing

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and verbosity
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --cov=src/postwriter
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml:coverage.xml
    --cov-fail-under=85
    --cov-branch

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    visual: Visual regression and UI tests
    security: Security-focused tests
    slow: Tests that take longer to run
    browser: Tests requiring browser automation
    network: Tests requiring network access
    asyncio: Asynchronous tests
    performance: Performance and load tests

# Async test handling
asyncio_mode = auto

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests_html
    ignore::UserWarning:selenium
    error::pytest.PytestUnraisableExceptionWarning

# Test timeouts
timeout = 300
timeout_method = thread

# Minimum Python version
minversion = 3.8

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage configuration
[coverage:run]
source = src/postwriter
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = true
precision = 2
sort = Cover

[coverage:html]
directory = htmlcov
title = PostWriter Test Coverage Report

[coverage:xml]
output = coverage.xml